ARM GAS  /tmp/cc05JIy8.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f1xx_hal.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.HAL_MspInit,"ax",%progbits
  19              		.align	2
  20              		.weak	HAL_MspInit
  21              		.thumb
  22              		.thumb_func
  24              	HAL_MspInit:
  25              	.LFB65:
  26              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c"
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @file    stm32f1xx_hal.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @version V1.1.1
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @date    12-May-2017
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief   HAL module driver.
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *          This is the common part of the HAL initialization
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   @verbatim
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                      ##### How to use this driver #####
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ==============================================================================
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     The HAL contains two APIs' categories: 
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****          (+) Common HAL APIs
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****          (+) Services HAL APIs
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   @endverbatim
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @attention
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Redistribution and use in source and binary forms, with or without modification,
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * are permitted provided that the following conditions are met:
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      this list of conditions and the following disclaimer.
  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
ARM GAS  /tmp/cc05JIy8.s 			page 2


  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      this list of conditions and the following disclaimer in the documentation
  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      and/or other materials provided with the distribution.
  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      may be used to endorse or promote products derived from this software
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      without specific prior written permission.
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #include "stm32f1xx_hal.h"
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @addtogroup STM32F1xx_HAL_Driver
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL HAL
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief HAL module driver.
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private define ------------------------------------------------------------*/
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Private_Constants HAL Private Constants
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  * @brief STM32F1xx HAL Driver version number V1.1.1
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    */
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_SUB1   (0x01U) /*!< [23:16] sub1 version */
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_SUB2   (0x01U) /*!< [15:8]  sub2 version */
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION         ((__STM32F1xx_HAL_VERSION_MAIN << 24)\
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_SUB1 << 16)\
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_SUB2 << 8 )\
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_RC))
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define IDCODE_DEVID_MASK    0x00000FFFU
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
ARM GAS  /tmp/cc05JIy8.s 			page 3


  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Private_Variables HAL Private Variables
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __IO uint32_t uwTick;
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Exported functions ---------------------------------------------------------*/
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  *  @brief    Initialization and de-initialization functions
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  *
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @verbatim
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****               ##### Initialization and de-initialization functions #####
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    [..]  This section provides functions allowing to:
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Initializes the Flash interface, the NVIC allocation and initial clock 
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****           configuration. It initializes the source of time base also when timeout 
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****           is needed and the backup domain when enabled.
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) de-Initializes common part of the HAL.
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated 
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****           Tick interrupt priority. 
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) Systick timer is used by default as source of time base, but user 
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              handled in milliseconds basis.
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             ISR process will be blocked. 
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak  
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @endverbatim
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first 
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         HAL function), it performs the following:
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Configure the Flash prefetch.
 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
ARM GAS  /tmp/cc05JIy8.s 			page 4


 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Set NVIC Group Priority to 4.
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file 
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           "stm32f1xx_hal_msp.c" to do the global low level hardware initialization 
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *            
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         to have correct HAL operation.
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure Flash prefetch */
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #if defined(STM32F101x6) || defined(STM32F101xB) || defined(STM32F101xE) || defined(STM32F101xG) ||
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F102x6) || defined(STM32F102xB) || \
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F103x6) || defined(STM32F103xB) || defined(STM32F103xE) || defined(STM32F103xG) ||
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F105xC) || defined(STM32F107xC)
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Prefetch buffer is not available on value line devices */
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif /* PREFETCH_ENABLE */
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Set Interrupt Group Priority */
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is MSI) */
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Init the low level hardware */
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_MspInit();
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function de-Initializes common part of the HAL and stops the source
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        of time base.
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is optional.
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Reset of all peripherals */
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #if defined(STM32F105xC) || defined(STM32F107xC)
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
ARM GAS  /tmp/cc05JIy8.s 			page 5


 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* De-Init the low level hardware */
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_MspDeInit();
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Initializes the MSP.
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_MspInit(void)
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
  27              		.loc 1 217 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 7047     		bx	lr
  33              		.cfi_endproc
  34              	.LFE65:
  36 0002 00BF     		.section	.text.HAL_MspDeInit,"ax",%progbits
  37              		.align	2
  38              		.weak	HAL_MspDeInit
  39              		.thumb
  40              		.thumb_func
  42              	HAL_MspDeInit:
  43              	.LFB66:
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    */
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  DeInitializes the MSP.
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_MspDeInit(void)
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
  44              		.loc 1 228 0
  45              		.cfi_startproc
  46              		@ args = 0, pretend = 0, frame = 0
  47              		@ frame_needed = 0, uses_anonymous_args = 0
  48              		@ link register save eliminated.
  49 0000 7047     		bx	lr
  50              		.cfi_endproc
  51              	.LFE66:
  53 0002 00BF     		.section	.text.HAL_DeInit,"ax",%progbits
  54              		.align	2
  55              		.global	HAL_DeInit
  56              		.thumb
  57              		.thumb_func
  59              	HAL_DeInit:
  60              	.LFB64:
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Reset of all peripherals */
  61              		.loc 1 192 0
ARM GAS  /tmp/cc05JIy8.s 			page 6


  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Reset of all peripherals */
  65              		.loc 1 192 0
  66 0000 10B5     		push	{r4, lr}
  67              	.LCFI0:
  68              		.cfi_def_cfa_offset 8
  69              		.cfi_offset 4, -8
  70              		.cfi_offset 14, -4
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  71              		.loc 1 194 0
  72 0002 064B     		ldr	r3, .L5
  73 0004 4FF0FF32 		mov	r2, #-1
  74 0008 DA60     		str	r2, [r3, #12]
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  75              		.loc 1 195 0
  76 000a 0024     		movs	r4, #0
  77 000c 1C61     		str	r4, [r3, #16]
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  78              		.loc 1 197 0
  79 000e DA60     		str	r2, [r3, #12]
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  80              		.loc 1 198 0
  81 0010 DC60     		str	r4, [r3, #12]
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     
  82              		.loc 1 206 0
  83 0012 FFF7FEFF 		bl	HAL_MspDeInit
  84              	.LVL0:
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  85              		.loc 1 210 0
  86 0016 2046     		mov	r0, r4
  87 0018 10BD     		pop	{r4, pc}
  88              	.L6:
  89 001a 00BF     		.align	2
  90              	.L5:
  91 001c 00100240 		.word	1073876992
  92              		.cfi_endproc
  93              	.LFE64:
  95              		.section	.text.HAL_InitTick,"ax",%progbits
  96              		.align	2
  97              		.weak	HAL_InitTick
  98              		.thumb
  99              		.thumb_func
 101              	HAL_InitTick:
 102              	.LFB67:
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    */
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function configures the source of the time base. 
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        Tick interrupt priority.
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig(). 
ARM GAS  /tmp/cc05JIy8.s 			page 7


 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       The the SysTick interrupt must have higher priority (numerically lower) 
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementation  in user file.
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @param TickPriority: Tick interrupt priority.
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 103              		.loc 1 251 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              	.LVL1:
 108 0000 10B5     		push	{r4, lr}
 109              	.LCFI1:
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 4, -8
 112              		.cfi_offset 14, -4
 113 0002 0446     		mov	r4, r0
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /*Configure the SysTick to have interrupt in 1ms time basis*/
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_SYSTICK_Config(SystemCoreClock/1000U);
 114              		.loc 1 253 0
 115 0004 074B     		ldr	r3, .L9
 116 0006 1B68     		ldr	r3, [r3]
 117 0008 0748     		ldr	r0, .L9+4
 118              	.LVL2:
 119 000a A0FB0330 		umull	r3, r0, r0, r3
 120 000e 8009     		lsrs	r0, r0, #6
 121 0010 FFF7FEFF 		bl	HAL_SYSTICK_Config
 122              	.LVL3:
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /*Configure the SysTick IRQ priority */
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority ,0U);
 123              		.loc 1 256 0
 124 0014 4FF0FF30 		mov	r0, #-1
 125 0018 2146     		mov	r1, r4
 126 001a 0022     		movs	r2, #0
 127 001c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 128              	.LVL4:
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 129              		.loc 1 260 0
 130 0020 0020     		movs	r0, #0
 131 0022 10BD     		pop	{r4, pc}
 132              	.LVL5:
 133              	.L10:
 134              		.align	2
 135              	.L9:
 136 0024 00000000 		.word	SystemCoreClock
 137 0028 D34D6210 		.word	274877907
 138              		.cfi_endproc
ARM GAS  /tmp/cc05JIy8.s 			page 8


 139              	.LFE67:
 141              		.section	.text.HAL_Init,"ax",%progbits
 142              		.align	2
 143              		.global	HAL_Init
 144              		.thumb
 145              		.thumb_func
 147              	HAL_Init:
 148              	.LFB63:
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure Flash prefetch */
 149              		.loc 1 159 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153 0000 08B5     		push	{r3, lr}
 154              	.LCFI2:
 155              		.cfi_def_cfa_offset 8
 156              		.cfi_offset 3, -8
 157              		.cfi_offset 14, -4
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
 158              		.loc 1 168 0
 159 0002 074A     		ldr	r2, .L13
 160 0004 1368     		ldr	r3, [r2]
 161 0006 43F01003 		orr	r3, r3, #16
 162 000a 1360     		str	r3, [r2]
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 163              		.loc 1 173 0
 164 000c 0320     		movs	r0, #3
 165 000e FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 166              	.LVL6:
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 167              		.loc 1 176 0
 168 0012 0020     		movs	r0, #0
 169 0014 FFF7FEFF 		bl	HAL_InitTick
 170              	.LVL7:
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 171              		.loc 1 179 0
 172 0018 FFF7FEFF 		bl	HAL_MspInit
 173              	.LVL8:
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 174              		.loc 1 183 0
 175 001c 0020     		movs	r0, #0
 176 001e 08BD     		pop	{r3, pc}
 177              	.L14:
 178              		.align	2
 179              	.L13:
 180 0020 00200240 		.word	1073881088
 181              		.cfi_endproc
 182              	.LFE63:
 184              		.section	.text.HAL_IncTick,"ax",%progbits
 185              		.align	2
 186              		.weak	HAL_IncTick
 187              		.thumb
 188              		.thumb_func
 190              	HAL_IncTick:
 191              	.LFB68:
 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
ARM GAS  /tmp/cc05JIy8.s 			page 9


 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *  @brief    HAL Control functions
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @verbatim
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                       ##### HAL Control functions #####
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]  This section provides functions allowing to:
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Provide a tick value in millisecond
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Provide a blocking delay in millisecond
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Suspend the time base source interrupt
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Resume the time base source interrupt
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the HAL API driver version
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the device identifier
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the device revision identifier
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @endverbatim
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        used as application time base.
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       in Systick ISR.
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      implementations in user file.
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_IncTick(void)
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 192              		.loc 1 299 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   uwTick++;
 197              		.loc 1 300 0
 198 0000 024A     		ldr	r2, .L16
 199 0002 1368     		ldr	r3, [r2]
 200 0004 0133     		adds	r3, r3, #1
 201 0006 1360     		str	r3, [r2]
 202 0008 7047     		bx	lr
 203              	.L17:
 204 000a 00BF     		.align	2
 205              	.L16:
 206 000c 00000000 		.word	uwTick
 207              		.cfi_endproc
 208              	.LFE68:
 210              		.section	.text.HAL_GetTick,"ax",%progbits
 211              		.align	2
ARM GAS  /tmp/cc05JIy8.s 			page 10


 212              		.weak	HAL_GetTick
 213              		.thumb
 214              		.thumb_func
 216              	HAL_GetTick:
 217              	.LFB69:
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Provides a tick value in millisecond.
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note  This function is declared as __weak  to be overwritten  in case of other 
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval tick value
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 218              		.loc 1 310 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              		@ link register save eliminated.
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return uwTick;
 223              		.loc 1 311 0
 224 0000 014B     		ldr	r3, .L19
 225 0002 1868     		ldr	r0, [r3]
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 226              		.loc 1 312 0
 227 0004 7047     		bx	lr
 228              	.L20:
 229 0006 00BF     		.align	2
 230              	.L19:
 231 0008 00000000 		.word	uwTick
 232              		.cfi_endproc
 233              	.LFE69:
 235              		.section	.text.HAL_Delay,"ax",%progbits
 236              		.align	2
 237              		.weak	HAL_Delay
 238              		.thumb
 239              		.thumb_func
 241              	HAL_Delay:
 242              	.LFB70:
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based 
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        on variable incremented.
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is incremented.
 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @param Delay: specifies the delay time length, in milliseconds.
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_Delay(__IO uint32_t Delay)
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 243              		.loc 1 326 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/cc05JIy8.s 			page 11


 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              	.LVL9:
 248 0000 30B5     		push	{r4, r5, lr}
 249              	.LCFI3:
 250              		.cfi_def_cfa_offset 12
 251              		.cfi_offset 4, -12
 252              		.cfi_offset 5, -8
 253              		.cfi_offset 14, -4
 254 0002 83B0     		sub	sp, sp, #12
 255              	.LCFI4:
 256              		.cfi_def_cfa_offset 24
 257 0004 0190     		str	r0, [sp, #4]
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 258              		.loc 1 327 0
 259 0006 FFF7FEFF 		bl	HAL_GetTick
 260              	.LVL10:
 261 000a 0546     		mov	r5, r0
 262              	.LVL11:
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   uint32_t wait = Delay;
 263              		.loc 1 328 0
 264 000c 019C     		ldr	r4, [sp, #4]
 265              	.LVL12:
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Add a period to guarantee minimum wait */
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 266              		.loc 1 331 0
 267 000e B4F1FF3F 		cmp	r4, #-1
 268 0012 00D0     		beq	.L23
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****      wait++;
 269              		.loc 1 333 0
 270 0014 0134     		adds	r4, r4, #1
 271              	.LVL13:
 272              	.L23:
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   while((HAL_GetTick() - tickstart) < wait)
 273              		.loc 1 336 0 discriminator 1
 274 0016 FFF7FEFF 		bl	HAL_GetTick
 275              	.LVL14:
 276 001a 401B     		subs	r0, r0, r5
 277 001c A042     		cmp	r0, r4
 278 001e FAD3     		bcc	.L23
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 279              		.loc 1 339 0
 280 0020 03B0     		add	sp, sp, #12
 281              	.LCFI5:
 282              		.cfi_def_cfa_offset 12
 283              		@ sp needed
 284 0022 30BD     		pop	{r4, r5, pc}
 285              		.cfi_endproc
 286              	.LFE70:
 288              		.section	.text.HAL_SuspendTick,"ax",%progbits
 289              		.align	2
 290              		.weak	HAL_SuspendTick
ARM GAS  /tmp/cc05JIy8.s 			page 12


 291              		.thumb
 292              		.thumb_func
 294              	HAL_SuspendTick:
 295              	.LFB71:
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Suspend Tick increment.
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment 
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is suspended.
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_SuspendTick(void)
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 296              		.loc 1 352 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300              		@ link register save eliminated.
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Disable SysTick Interrupt */
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 301              		.loc 1 354 0
 302 0000 024A     		ldr	r2, .L26
 303 0002 1368     		ldr	r3, [r2]
 304 0004 23F00203 		bic	r3, r3, #2
 305 0008 1360     		str	r3, [r2]
 306 000a 7047     		bx	lr
 307              	.L27:
 308              		.align	2
 309              	.L26:
 310 000c 10E000E0 		.word	-536813552
 311              		.cfi_endproc
 312              	.LFE71:
 314              		.section	.text.HAL_ResumeTick,"ax",%progbits
 315              		.align	2
 316              		.weak	HAL_ResumeTick
 317              		.thumb
 318              		.thumb_func
 320              	HAL_ResumeTick:
 321              	.LFB72:
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Resume Tick increment.
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment 
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is resumed.
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_ResumeTick(void)
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
ARM GAS  /tmp/cc05JIy8.s 			page 13


 322              		.loc 1 368 0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326              		@ link register save eliminated.
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Enable SysTick Interrupt */
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 327              		.loc 1 370 0
 328 0000 024A     		ldr	r2, .L29
 329 0002 1368     		ldr	r3, [r2]
 330 0004 43F00203 		orr	r3, r3, #2
 331 0008 1360     		str	r3, [r2]
 332 000a 7047     		bx	lr
 333              	.L30:
 334              		.align	2
 335              	.L29:
 336 000c 10E000E0 		.word	-536813552
 337              		.cfi_endproc
 338              	.LFE72:
 340              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 341              		.align	2
 342              		.global	HAL_GetHalVersion
 343              		.thumb
 344              		.thumb_func
 346              	HAL_GetHalVersion:
 347              	.LFB73:
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Returns the HAL revision
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 348              		.loc 1 378 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352              		@ link register save eliminated.
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  return __STM32F1xx_HAL_VERSION;
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 353              		.loc 1 380 0
 354 0000 0048     		ldr	r0, .L32
 355 0002 7047     		bx	lr
 356              	.L33:
 357              		.align	2
 358              	.L32:
 359 0004 00010101 		.word	16843008
 360              		.cfi_endproc
 361              	.LFE73:
 363              		.section	.text.HAL_GetREVID,"ax",%progbits
 364              		.align	2
 365              		.global	HAL_GetREVID
 366              		.thumb
 367              		.thumb_func
 369              	HAL_GetREVID:
 370              	.LFB74:
ARM GAS  /tmp/cc05JIy8.s 			page 14


 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Returns the device revision identifier.
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device revision identifier
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetREVID(void)
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 371              		.loc 1 394 0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375              		@ link register save eliminated.
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return((DBGMCU->IDCODE) >> DBGMCU_IDCODE_REV_ID_Pos);
 376              		.loc 1 395 0
 377 0000 014B     		ldr	r3, .L35
 378 0002 1868     		ldr	r0, [r3]
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 379              		.loc 1 396 0
 380 0004 000C     		lsrs	r0, r0, #16
 381 0006 7047     		bx	lr
 382              	.L36:
 383              		.align	2
 384              	.L35:
 385 0008 002004E0 		.word	-536600576
 386              		.cfi_endproc
 387              	.LFE74:
 389              		.section	.text.HAL_GetDEVID,"ax",%progbits
 390              		.align	2
 391              		.global	HAL_GetDEVID
 392              		.thumb
 393              		.thumb_func
 395              	HAL_GetDEVID:
 396              	.LFB75:
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Returns the device identifier.
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device identifier
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetDEVID(void)
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 397              		.loc 1 410 0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc05JIy8.s 			page 15


 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401              		@ link register save eliminated.
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 402              		.loc 1 411 0
 403 0000 024B     		ldr	r3, .L38
 404 0002 1868     		ldr	r0, [r3]
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 405              		.loc 1 412 0
 406 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 407 0008 7047     		bx	lr
 408              	.L39:
 409 000a 00BF     		.align	2
 410              	.L38:
 411 000c 002004E0 		.word	-536600576
 412              		.cfi_endproc
 413              	.LFE75:
 415              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 416              		.align	2
 417              		.global	HAL_DBGMCU_EnableDBGSleepMode
 418              		.thumb
 419              		.thumb_func
 421              	HAL_DBGMCU_EnableDBGSleepMode:
 422              	.LFB76:
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 423              		.loc 1 419 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427              		@ link register save eliminated.
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 428              		.loc 1 420 0
 429 0000 024A     		ldr	r2, .L41
 430 0002 5368     		ldr	r3, [r2, #4]
 431 0004 43F00103 		orr	r3, r3, #1
 432 0008 5360     		str	r3, [r2, #4]
 433 000a 7047     		bx	lr
 434              	.L42:
 435              		.align	2
 436              	.L41:
 437 000c 002004E0 		.word	-536600576
 438              		.cfi_endproc
 439              	.LFE76:
 441              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 442              		.align	2
 443              		.global	HAL_DBGMCU_DisableDBGSleepMode
 444              		.thumb
 445              		.thumb_func
 447              	HAL_DBGMCU_DisableDBGSleepMode:
 448              	.LFB77:
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
ARM GAS  /tmp/cc05JIy8.s 			page 16


 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 449              		.loc 1 435 0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 453              		@ link register save eliminated.
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 454              		.loc 1 436 0
 455 0000 024A     		ldr	r2, .L44
 456 0002 5368     		ldr	r3, [r2, #4]
 457 0004 23F00103 		bic	r3, r3, #1
 458 0008 5360     		str	r3, [r2, #4]
 459 000a 7047     		bx	lr
 460              	.L45:
 461              		.align	2
 462              	.L44:
 463 000c 002004E0 		.word	-536600576
 464              		.cfi_endproc
 465              	.LFE77:
 467              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 468              		.align	2
 469              		.global	HAL_DBGMCU_EnableDBGStopMode
 470              		.thumb
 471              		.thumb_func
 473              	HAL_DBGMCU_EnableDBGStopMode:
 474              	.LFB78:
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On all STM32F1 devices:
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       If the system tick timer interrupt is enabled during the Stop mode 
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug (DBG_STOP bit set in the DBGMCU_CR register ), it will wakeup
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       the system from Stop mode.
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Workaround: To debug the Stop mode, disable the system tick timer 
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       interrupt.
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On all STM32F1 devices:
ARM GAS  /tmp/cc05JIy8.s 			page 17


 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       If the system tick timer interrupt is enabled during the Stop mode  
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug (DBG_STOP bit set in the DBGMCU_CR register ), it will wakeup
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       the system from Stop mode.
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Workaround: To debug the Stop mode, disable the system tick timer
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       interrupt.
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 475              		.loc 1 465 0
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 0
 478              		@ frame_needed = 0, uses_anonymous_args = 0
 479              		@ link register save eliminated.
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 480              		.loc 1 466 0
 481 0000 024A     		ldr	r2, .L47
 482 0002 5368     		ldr	r3, [r2, #4]
 483 0004 43F00203 		orr	r3, r3, #2
 484 0008 5360     		str	r3, [r2, #4]
 485 000a 7047     		bx	lr
 486              	.L48:
 487              		.align	2
 488              	.L47:
 489 000c 002004E0 		.word	-536600576
 490              		.cfi_endproc
 491              	.LFE78:
 493              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 494              		.align	2
 495              		.global	HAL_DBGMCU_DisableDBGStopMode
 496              		.thumb
 497              		.thumb_func
 499              	HAL_DBGMCU_DisableDBGStopMode:
 500              	.LFB79:
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 501              		.loc 1 481 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 0, uses_anonymous_args = 0
 505              		@ link register save eliminated.
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 506              		.loc 1 482 0
ARM GAS  /tmp/cc05JIy8.s 			page 18


 507 0000 024A     		ldr	r2, .L50
 508 0002 5368     		ldr	r3, [r2, #4]
 509 0004 23F00203 		bic	r3, r3, #2
 510 0008 5360     		str	r3, [r2, #4]
 511 000a 7047     		bx	lr
 512              	.L51:
 513              		.align	2
 514              	.L50:
 515 000c 002004E0 		.word	-536600576
 516              		.cfi_endproc
 517              	.LFE79:
 519              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 520              		.align	2
 521              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 522              		.thumb
 523              		.thumb_func
 525              	HAL_DBGMCU_EnableDBGStandbyMode:
 526              	.LFB80:
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 527              		.loc 1 497 0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 0
 530              		@ frame_needed = 0, uses_anonymous_args = 0
 531              		@ link register save eliminated.
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 532              		.loc 1 498 0
 533 0000 024A     		ldr	r2, .L53
 534 0002 5368     		ldr	r3, [r2, #4]
 535 0004 43F00403 		orr	r3, r3, #4
 536 0008 5360     		str	r3, [r2, #4]
 537 000a 7047     		bx	lr
 538              	.L54:
 539              		.align	2
 540              	.L53:
 541 000c 002004E0 		.word	-536600576
 542              		.cfi_endproc
 543              	.LFE80:
 545              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 546              		.align	2
 547              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 548              		.thumb
 549              		.thumb_func
 551              	HAL_DBGMCU_DisableDBGStandbyMode:
ARM GAS  /tmp/cc05JIy8.s 			page 19


 552              	.LFB81:
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in 
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 553              		.loc 1 513 0
 554              		.cfi_startproc
 555              		@ args = 0, pretend = 0, frame = 0
 556              		@ frame_needed = 0, uses_anonymous_args = 0
 557              		@ link register save eliminated.
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 558              		.loc 1 514 0
 559 0000 024A     		ldr	r2, .L56
 560 0002 5368     		ldr	r3, [r2, #4]
 561 0004 23F00403 		bic	r3, r3, #4
 562 0008 5360     		str	r3, [r2, #4]
 563 000a 7047     		bx	lr
 564              	.L57:
 565              		.align	2
 566              	.L56:
 567 000c 002004E0 		.word	-536600576
 568              		.cfi_endproc
 569              	.LFE81:
 571              		.section	.text.HAL_GetUID,"ax",%progbits
 572              		.align	2
 573              		.global	HAL_GetUID
 574              		.thumb
 575              		.thumb_func
 577              	HAL_GetUID:
 578              	.LFB82:
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Return the unique device identifier (UID based on 96 bits)
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @param UID: pointer to 3 words array.
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device identifier
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_GetUID(uint32_t *UID)
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 579              		.loc 1 523 0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 0, uses_anonymous_args = 0
 583              		@ link register save eliminated.
 584              	.LVL15:
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   UID[0] = (uint32_t)(READ_REG(*((uint32_t *)UID_BASE)));
ARM GAS  /tmp/cc05JIy8.s 			page 20


 585              		.loc 1 524 0
 586 0000 044B     		ldr	r3, .L59
 587 0002 1B68     		ldr	r3, [r3]
 588 0004 0360     		str	r3, [r0]
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   UID[1] = (uint32_t)(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 589              		.loc 1 525 0
 590 0006 044B     		ldr	r3, .L59+4
 591 0008 1B68     		ldr	r3, [r3]
 592 000a 4360     		str	r3, [r0, #4]
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   UID[2] = (uint32_t)(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 593              		.loc 1 526 0
 594 000c 034B     		ldr	r3, .L59+8
 595 000e 1B68     		ldr	r3, [r3]
 596 0010 8360     		str	r3, [r0, #8]
 597 0012 7047     		bx	lr
 598              	.L60:
 599              		.align	2
 600              	.L59:
 601 0014 E8F7FF1F 		.word	536868840
 602 0018 ECF7FF1F 		.word	536868844
 603 001c F0F7FF1F 		.word	536868848
 604              		.cfi_endproc
 605              	.LFE82:
 607              		.comm	uwTick,4,4
 608              		.text
 609              	.Letext0:
 610              		.file 2 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 611              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 612              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 613              		.file 5 "Drivers/CMSIS/Include/core_cm3.h"
 614              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 615              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 616              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /tmp/cc05JIy8.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal.c
     /tmp/cc05JIy8.s:19     .text.HAL_MspInit:0000000000000000 $t
     /tmp/cc05JIy8.s:24     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/cc05JIy8.s:37     .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/cc05JIy8.s:42     .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/cc05JIy8.s:54     .text.HAL_DeInit:0000000000000000 $t
     /tmp/cc05JIy8.s:59     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/cc05JIy8.s:91     .text.HAL_DeInit:000000000000001c $d
     /tmp/cc05JIy8.s:96     .text.HAL_InitTick:0000000000000000 $t
     /tmp/cc05JIy8.s:101    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/cc05JIy8.s:136    .text.HAL_InitTick:0000000000000024 $d
     /tmp/cc05JIy8.s:142    .text.HAL_Init:0000000000000000 $t
     /tmp/cc05JIy8.s:147    .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/cc05JIy8.s:180    .text.HAL_Init:0000000000000020 $d
     /tmp/cc05JIy8.s:185    .text.HAL_IncTick:0000000000000000 $t
     /tmp/cc05JIy8.s:190    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/cc05JIy8.s:206    .text.HAL_IncTick:000000000000000c $d
                            *COM*:0000000000000004 uwTick
     /tmp/cc05JIy8.s:211    .text.HAL_GetTick:0000000000000000 $t
     /tmp/cc05JIy8.s:216    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/cc05JIy8.s:231    .text.HAL_GetTick:0000000000000008 $d
     /tmp/cc05JIy8.s:236    .text.HAL_Delay:0000000000000000 $t
     /tmp/cc05JIy8.s:241    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/cc05JIy8.s:289    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/cc05JIy8.s:294    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/cc05JIy8.s:310    .text.HAL_SuspendTick:000000000000000c $d
     /tmp/cc05JIy8.s:315    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/cc05JIy8.s:320    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/cc05JIy8.s:336    .text.HAL_ResumeTick:000000000000000c $d
     /tmp/cc05JIy8.s:341    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/cc05JIy8.s:346    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/cc05JIy8.s:359    .text.HAL_GetHalVersion:0000000000000004 $d
     /tmp/cc05JIy8.s:364    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/cc05JIy8.s:369    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/cc05JIy8.s:385    .text.HAL_GetREVID:0000000000000008 $d
     /tmp/cc05JIy8.s:390    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/cc05JIy8.s:395    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/cc05JIy8.s:411    .text.HAL_GetDEVID:000000000000000c $d
     /tmp/cc05JIy8.s:416    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
     /tmp/cc05JIy8.s:421    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/cc05JIy8.s:437    .text.HAL_DBGMCU_EnableDBGSleepMode:000000000000000c $d
     /tmp/cc05JIy8.s:442    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
     /tmp/cc05JIy8.s:447    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/cc05JIy8.s:463    .text.HAL_DBGMCU_DisableDBGSleepMode:000000000000000c $d
     /tmp/cc05JIy8.s:468    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/cc05JIy8.s:473    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/cc05JIy8.s:489    .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
     /tmp/cc05JIy8.s:494    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/cc05JIy8.s:499    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/cc05JIy8.s:515    .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
     /tmp/cc05JIy8.s:520    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/cc05JIy8.s:525    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/cc05JIy8.s:541    .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
     /tmp/cc05JIy8.s:546    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/cc05JIy8.s:551    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/cc05JIy8.s:567    .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
ARM GAS  /tmp/cc05JIy8.s 			page 22


     /tmp/cc05JIy8.s:572    .text.HAL_GetUID:0000000000000000 $t
     /tmp/cc05JIy8.s:577    .text.HAL_GetUID:0000000000000000 HAL_GetUID
     /tmp/cc05JIy8.s:601    .text.HAL_GetUID:0000000000000014 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping
